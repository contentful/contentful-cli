version: 2.1

orbs:
  vault: contentful/vault@1

jobs:
  unit:
    docker:
      - image: cimg/node:16.11
    steps:
      - run: node --version
      - run: npm --version
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: npm ci
      - run: npm test
      - run: npm run tsc -- --noEmit
  integration:
    docker:
      - image: cimg/node:16.11
    steps:
      - run: node --version
      - run: npm --version
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: npm ci
      - run:
          command: npm run test:integration:ci
          no_output_timeout: 20m
  linux:
    docker:
      - image: cimg/node:16.11
    steps:
      - run: node --version
      - run: npm --version
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: npm ci
      - run: npm run build:standalone
      - run: npm run test:e2e
  osx:
    macos:
      xcode: 12.5.1
    steps:
      - run: node --version
      - run: npm --version
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: npm ci
      - run: npm run build:standalone
      - run: npm run test:e2e
  release:
    docker:
      - image: cimg/node:16.11
    steps:
      - checkout
      - vault/get-secrets: # Loads vault secrets
          template-preset: 'semantic-release-ecosystem'
      - run: git fetch --tags
      - run: npm ci
      - run: npm run build:package
      - run: npm run semantic-release
  audit:
    docker: &ref_0
      - image: cimg/node:16.11
        environment:
          NPM_CONFIG_PROGRESS: false
          NPM_CONFIG_LOGLEVEL: warn
    steps:
      - checkout
      - run: &ref_1
          name: Audit
          command: |
            npm audit --audit-level=moderate
  audit-and-notify:
    docker: *ref_0
    steps:
      - checkout
      - run: *ref_1
      - run:
          name: Notify vulnerabilities found
          when: on_fail
          command: |
            script/notify-vulnerabilities-to-slack.sh $SLACK_WEBHOOK
workflows:
  version: 2
  scheduled-audit:
    triggers:
      - schedule:
          cron: 0 0 * * *
          filters:
            branches:
              only: master
    jobs:
      - audit-and-notify
  build_and_test:
    jobs:
      - unit
      - integration
      - linux
      - osx
      - release:
          context: vault
          requires:
            - unit
            - integration
            - linux
            - osx
          filters:
            branches:
              only:
                - master
                - experimental
