version: 2.0
jobs:
  unit:
    docker:
      - image: circleci/node:12
    steps:
      - run: node --version
      - run: npm --version
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: npm install
      - run: npm test
      - run: bash <(curl -s https://codecov.io/bash)
  integration:
    docker:
      - image: circleci/node:12
    steps:
      - run: node --version
      - run: npm --version
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: npm install
      - run:
          command: npm run test:integration:ci
          no_output_timeout: 20m
  linux:
    docker:
      - image: circleci/node:12
    steps:
      - run: node --version
      - run: npm --version
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: npm install
      - run: npm run build:standalone
      - run: npm run test:e2e
  osx:
    macos:
      xcode: '9.0'
    steps:
      - run: node --version
      - run: npm --version
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: npm install
      - run: npm run build:standalone
      - run: npm run test:e2e
  release:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - run: git fetch --tags
      - run: npm install
      - run: npm run build:package
      - run: npm run semantic-release
  bump-brew-formula:
    macos:
      xcode: '9.0'
    steps:
      - checkout
      - run: npm run bump-brew-formula
  audit: &audit
    docker:
      - image: circleci/node:12
        environment:
          NPM_CONFIG_PROGRESS: false
          NPM_CONFIG_LOGLEVEL: warn
    steps:
      - checkout
      - run: &audit_action
          name: Audit
          command: |
            npx npm-audit-resolver@2 --ignoreLow
  audit-and-notify:
    <<: *audit
    steps:
      - checkout
      - run: *audit_action
      - run:
          name: Notify vulnerabilities found
          when: on_fail
          command: |
            script/notify-vulnerabilities-to-slack.sh $SLACK_WEBHOOK
workflows:
  version: 2
  scheduled-audit:
    triggers:
      - schedule:
          # Run each day at midnight
          cron: '0 0 * * *'
          filters:
            branches:
              only: master
    jobs:
      - audit-and-notify
  build_and_test:
    jobs:
      - unit
      - integration
      - linux
      - osx
      - audit
      - release:
          requires:
            - unit
            - integration
            - linux
            - audit
            - osx
      - bump-brew-formula:
          requires:
            - release
