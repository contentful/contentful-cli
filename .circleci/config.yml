version: 2.1

orbs:
  vault: contentful/vault@1
  macos: circleci/macos@2.4.0

jobs:
  unit:
    docker:
      - image: cimg/node:18.18.0
    steps:
      - run: node --version
      - run: npm --version
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: npm ci
      - run: npm run tsc
      - run: npm test
      - store_test_results:
          path: ./reports/unit-tests.xml
  integration:
    docker:
      - image: cimg/node:18.18.0
    steps:
      - run: node --version
      - run: npm --version
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: npm ci
      - run: npm run tsc
      - run:
          command: npm run test:integration:ci
          no_output_timeout: 20m
      - store_test_results:
          path: ./reports/integration-tests.xml
  linux:
    docker:
      - image: cimg/node:18.18.0
    steps:
      - run: node --version
      - run: npm --version
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: npm ci
      - run: npm run build:standalone
      - run: npm run test:e2e
      - store_test_results:
          path: ./reports/e2e-tests.xml
  osx:
    macos:
      xcode: 14.3.1
    resource_class: macos.m1.medium.gen1
    steps:
      - macos/install-rosetta
      - run: nvm install 18.18.0 && nvm alias default 18.18.0
      - run: node --version
      - run: npm --version
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: npm ci
      - run: npm run build:standalone
      - run: npm run test:e2e
      - store_test_results:
          path: ./reports/e2e-tests.xml
  release:
    docker:
      - image: cimg/node:18.18.0
    steps:
      - checkout
      - vault/get-secrets: # Loads vault secrets
          template-preset: 'semantic-release-ecosystem'
      - run: git fetch --tags
      - run: npm ci
      - run: npm run tsc
      # The build is automatically executed in a prepublishOnly script to ensure that the package.json with the updated version
      # is being packaged
      - run: npm run semantic-release
workflows:
  version: 2
  build_and_test:
    jobs:
      - unit
      - integration
      - linux
      - osx
      - release:
          context: vault
          requires:
            - unit
            - integration
            - linux
            - osx
          filters:
            branches:
              only:
                - main
                - beta
